// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package pkg

requires 2 < len(xs)
func example1(ghost xs seq[bool]) {
  ghost ys := xs[2 = false]
}

requires len(xs) == 1
ensures ys == seq[bool] { true }
func example2(ghost xs seq[bool]) (ghost ys seq[bool]) {
  ys = xs[0 = true]
}

func example3() {
  assert seq[int] { 2, 1 }[1 = 42] == seq[int] { 2, 42 }
  assert seq[int] { 2, 3, 4 }[0 = 10][1 = 11][2 = 12] == seq[int] { 10, 11, 12 }
  assert (seq[int] {  } ++ seq[int] { 2 })[0 = 42] == seq[int] { 42 }
}

requires 0 <= x1 && x1 < x2 && x2 < len(xs)
ensures xs[x1 = v1][x2 = v2] == xs[x2 = v2][x1 = v1]
func example4(ghost xs seq[bool], x1 int, x2 int, v1 bool, v2 bool) {
}

func example5() {
  assert seq[1..5][2 = 10] == seq[int] { 1, 2, 10, 4 }
}

func example6() {
  assert seq[1..5][0 = 10, 1 = 20, 3 = 40, 2 = 30] == seq[int] { 10, 20, 30, 40 }
  assert seq[1..5][0 = 10, 1 = 20][3 = 40, 2 = 30] == seq[1..5][0 = 10, 1 = 20, 3 = 40, 2 = 30]
}

func example7() {
  assert seq[1..5][2 = 10, 2 = 20, 2 = 40, 2 = 80] == seq[int] { 1, 2, 80, 4 }
}

func example8() {
  assert seq[1..5][1 = 20, 2 = 40, 1 = 60, 2 = 80] == seq[int] { 1, 60, 80, 4 }
}
